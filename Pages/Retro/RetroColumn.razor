<div class="grid-column">
    <div class="input-area">
        <input class="textbox" placeholder="Add a comment!" @bind="newEntry" />
        <button class="btn btn-primary" @onclick="Add_Click">Add</button>
    </div>
    @foreach (var r in inputRetros)
    {
        <p class="grid-item">
        <p class="grid-item-textArea">@r.Text</p>
        <div class="grid-item-buttonArea">
            <img class="icon-primary" src="../Icons/trash.svg" @onclick="() => Delete_Click(new RemoveRetroPayload {ItemId = r.Id, TargetList = inputRetros })" />
        </div>
        <div class="grid-item-iconArea">
            <img class="icon-secondary" src="@r.LikeImgSrc" @onclick="() => { Like_Click(r); Click_Debug(); }" />
            <img class="icon-secondary" src="@r.DislikeImgSrc" @onclick="() => { Dislike_Click(r); Click_Debug(); }" />
            <img class="icon-secondary" src="@r.StarImgSrc"@onclick="() => { Star_Click(r); Click_Debug(); }" />
        </div>
        </p>
    }
</div>

@code {
    public string newEntry;

    [Parameter]
    public List<RetroItem> inputRetros { get; set; }

    [Parameter]
    public EventCallback<RemoveRetroPayload> onDeleteClicked { get; set; }

    [Parameter]
    public EventCallback<RetroItem> onLikeClicked { get; set; }

    [Parameter]
    public EventCallback<string> onAddClicked { get; set; }


    private async Task Add_Click()
    {
        await onAddClicked.InvokeAsync(newEntry);
        newEntry = string.Empty;
    }

    private async Task Delete_Click(RemoveRetroPayload retroToDelete)
    {
        Console.WriteLine("Delete clicked");
        await onDeleteClicked.InvokeAsync(retroToDelete);
    }

    private void Click_Debug()
    {
        Console.WriteLine("Debug click!");
    }

    private void Like_Click(RetroItem r)
    {
        r.IsLiked = !r.IsLiked;
        
    }
    private void Dislike_Click(RetroItem r)
    {
        r.IsDisliked = !r.IsDisliked;
        
    }
    private void Star_Click(RetroItem r)
    {
        r.IsStarred = !r.IsStarred;
        
    }
}