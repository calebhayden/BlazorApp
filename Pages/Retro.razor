@page "/retro"
<div>
    <h1>Caleb's Crazy Cool Retro Board for Winners</h1>
    <h4>Good Items: @goodRetros.Count() | Bad Items: @badRetros.Count() </h4>
</div>

<div class="grid-container">
    <div class="grid-column">
        <div>
            <input placeholder="What went well?" @bind="newGoodEntry" />
            <button class="btn btn-primary" @onclick="AddGoodRetro">Add</button>
        </div>
        @foreach (var r in goodRetros)
        {
            <p class="grid-item">
            <p class="grid-item-textArea">@r.Text</p>
            <button class="btn btn-danger grid-item-buttonArea" @onclick="() => RemoveRetro(r, goodRetros)">x</button>
            </p>
        }
    </div>


    <div class="grid-column">
        <div>
            <div>
                <input placeholder="What didn't go well?" @bind="newBadEntry" />
                <button class="btn btn-primary" @onclick="AddBadRetro">Add</button>
            </div>
        </div>
        @foreach (var r in badRetros)
        {
            <p class="grid-item">
            <p class="grid-item-textArea">@r.Text</p>
            <button class="btn btn-danger grid-item-buttonArea" @onclick="() => RemoveRetro(r, badRetros)">x</button>
            </p>
        }
    </div>
</div>
@code {
    private string newGoodEntry;
    private string newBadEntry;
    private List<RetroItem> goodRetros = new();
    private List<RetroItem> badRetros = new();

    private void AddGoodRetro()
    {
        if (!string.IsNullOrWhiteSpace(newGoodEntry))
        {
            goodRetros.Add(new RetroItem { Text = newGoodEntry, IsGood = true });
            newGoodEntry = string.Empty;
        }
    }

    private void AddBadRetro()
    {
        if (!string.IsNullOrWhiteSpace(newBadEntry))
        {
            badRetros.Add(new RetroItem { Text = newBadEntry, IsGood = false });
            newBadEntry = string.Empty;
        }
    }
    private void RemoveRetro(RetroItem retro, List<RetroItem> whichList)
    {
        whichList.Remove(retro);
    }
}
